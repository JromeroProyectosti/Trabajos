#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrabajosEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Soporte")]
	public partial class ModuloTrabajosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUSUARIO(USUARIO instance);
    partial void UpdateUSUARIO(USUARIO instance);
    partial void DeleteUSUARIO(USUARIO instance);
    partial void InsertCLIENTE(CLIENTE instance);
    partial void UpdateCLIENTE(CLIENTE instance);
    partial void DeleteCLIENTE(CLIENTE instance);
    partial void InsertTRABAJO(TRABAJO instance);
    partial void UpdateTRABAJO(TRABAJO instance);
    partial void DeleteTRABAJO(TRABAJO instance);
    #endregion
		
		public ModuloTrabajosDataContext() : 
				base(global::TrabajosEntity.Properties.Settings.Default.SoporteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ModuloTrabajosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuloTrabajosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuloTrabajosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuloTrabajosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<USUARIO> USUARIO
		{
			get
			{
				return this.GetTable<USUARIO>();
			}
		}
		
		public System.Data.Linq.Table<CLIENTE> CLIENTE
		{
			get
			{
				return this.GetTable<CLIENTE>();
			}
		}
		
		public System.Data.Linq.Table<TRABAJO> TRABAJO
		{
			get
			{
				return this.GetTable<TRABAJO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USUARIO")]
	public partial class USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _Usuario1;
		
		private string _Password;
		
		private System.Nullable<int> _Activo;
		
		private EntitySet<TRABAJO> _TRABAJO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActivoChanging(System.Nullable<int> value);
    partial void OnActivoChanged();
    #endregion
		
		public USUARIO()
		{
			this._TRABAJO = new EntitySet<TRABAJO>(new Action<TRABAJO>(this.attach_TRABAJO), new Action<TRABAJO>(this.detach_TRABAJO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(50)")]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Int")]
		public System.Nullable<int> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_TRABAJO", Storage="_TRABAJO", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<TRABAJO> TRABAJO
		{
			get
			{
				return this._TRABAJO;
			}
			set
			{
				this._TRABAJO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRABAJO(TRABAJO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_TRABAJO(TRABAJO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTE")]
	public partial class CLIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _Correo;
		
		private string _Telefono;
		
		private EntitySet<TRABAJO> _TRABAJO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public CLIENTE()
		{
			this._TRABAJO = new EntitySet<TRABAJO>(new Action<TRABAJO>(this.attach_TRABAJO), new Action<TRABAJO>(this.detach_TRABAJO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(50)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_TRABAJO", Storage="_TRABAJO", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<TRABAJO> TRABAJO
		{
			get
			{
				return this._TRABAJO;
			}
			set
			{
				this._TRABAJO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRABAJO(TRABAJO entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = this;
		}
		
		private void detach_TRABAJO(TRABAJO entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRABAJO")]
	public partial class TRABAJO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTrabajo;
		
		private System.Nullable<int> _IdCliente;
		
		private System.Nullable<int> _IdEstado;
		
		private System.Nullable<int> _IdUsuario;
		
		private System.Nullable<int> _IdPrioridad;
		
		private System.Nullable<System.DateTime> _FechaRequerimiento;
		
		private System.Nullable<System.DateTime> _FechaTermino;
		
		private string _Observacion;
		
		private EntityRef<CLIENTE> _CLIENTE;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTrabajoChanging(int value);
    partial void OnIdTrabajoChanged();
    partial void OnIdClienteChanging(System.Nullable<int> value);
    partial void OnIdClienteChanged();
    partial void OnIdEstadoChanging(System.Nullable<int> value);
    partial void OnIdEstadoChanged();
    partial void OnIdUsuarioChanging(System.Nullable<int> value);
    partial void OnIdUsuarioChanged();
    partial void OnIdPrioridadChanging(System.Nullable<int> value);
    partial void OnIdPrioridadChanged();
    partial void OnFechaRequerimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaRequerimientoChanged();
    partial void OnFechaTerminoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaTerminoChanged();
    partial void OnObservacionChanging(string value);
    partial void OnObservacionChanged();
    #endregion
		
		public TRABAJO()
		{
			this._CLIENTE = default(EntityRef<CLIENTE>);
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrabajo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTrabajo
		{
			get
			{
				return this._IdTrabajo;
			}
			set
			{
				if ((this._IdTrabajo != value))
				{
					this.OnIdTrabajoChanging(value);
					this.SendPropertyChanging();
					this._IdTrabajo = value;
					this.SendPropertyChanged("IdTrabajo");
					this.OnIdTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int")]
		public System.Nullable<int> IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._CLIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstado", DbType="Int")]
		public System.Nullable<int> IdEstado
		{
			get
			{
				return this._IdEstado;
			}
			set
			{
				if ((this._IdEstado != value))
				{
					this.OnIdEstadoChanging(value);
					this.SendPropertyChanging();
					this._IdEstado = value;
					this.SendPropertyChanged("IdEstado");
					this.OnIdEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int")]
		public System.Nullable<int> IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPrioridad", DbType="Int")]
		public System.Nullable<int> IdPrioridad
		{
			get
			{
				return this._IdPrioridad;
			}
			set
			{
				if ((this._IdPrioridad != value))
				{
					this.OnIdPrioridadChanging(value);
					this.SendPropertyChanging();
					this._IdPrioridad = value;
					this.SendPropertyChanged("IdPrioridad");
					this.OnIdPrioridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRequerimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaRequerimiento
		{
			get
			{
				return this._FechaRequerimiento;
			}
			set
			{
				if ((this._FechaRequerimiento != value))
				{
					this.OnFechaRequerimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaRequerimiento = value;
					this.SendPropertyChanged("FechaRequerimiento");
					this.OnFechaRequerimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaTermino", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaTermino
		{
			get
			{
				return this._FechaTermino;
			}
			set
			{
				if ((this._FechaTermino != value))
				{
					this.OnFechaTerminoChanging(value);
					this.SendPropertyChanging();
					this._FechaTermino = value;
					this.SendPropertyChanged("FechaTermino");
					this.OnFechaTerminoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacion", DbType="VarChar(1000)")]
		public string Observacion
		{
			get
			{
				return this._Observacion;
			}
			set
			{
				if ((this._Observacion != value))
				{
					this.OnObservacionChanging(value);
					this.SendPropertyChanging();
					this._Observacion = value;
					this.SendPropertyChanged("Observacion");
					this.OnObservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_TRABAJO", Storage="_CLIENTE", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public CLIENTE CLIENTE
		{
			get
			{
				return this._CLIENTE.Entity;
			}
			set
			{
				CLIENTE previousValue = this._CLIENTE.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTE.Entity = null;
						previousValue.TRABAJO.Remove(this);
					}
					this._CLIENTE.Entity = value;
					if ((value != null))
					{
						value.TRABAJO.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_TRABAJO", Storage="_USUARIO", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.TRABAJO.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.TRABAJO.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
